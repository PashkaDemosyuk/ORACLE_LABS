SELECT * FROM USER_TAB_PARTITIONS WHERE TABLE_NAME = 'T_LIST'; 
SELECT * FROM USER_PART_TABLES;

CREATE TABLE NO_PARTITIONS( ID NUMBER, TIME_ID DATE);

ALTER USER U2_DPA_PDB DEFAULT TABLESPACE T5 QUOTA UNLIMITED ON T5; 
ALTER USER U2_DPA_PDB QUOTA UNLIMITED ON T1; 
ALTER USER U2_DPA_PDB QUOTA UNLIMITED ON T2; 
ALTER USER U2_DPA_PDB QUOTA UNLIMITED ON T3; 
ALTER USER U2_DPA_PDB QUOTA UNLIMITED ON T4; 


CREATE TABLESPACE T1 
DATAFILE 'C:\!Labs\T1_U2_DPA_PDB.dbf' 
SIZE 10M 
REUSE AUTOEXTEND 
ON NEXT 2M 


CREATE TABLESPACE T2 
DATAFILE 'C:\!Labs\T2_U2_DPA_PDB.dbf' 
SIZE 10M 
REUSE AUTOEXTEND 
ON NEXT 2M 


CREATE TABLESPACE T3 
DATAFILE 'C:\!Labs\T3_U2_DPA_PDB.dbf' 
SIZE 10M 
REUSE AUTOEXTEND 
ON NEXT 2M 


CREATE TABLESPACE T4 
DATAFILE 'C:\!Labs\T4_U2_DPA_PDB.dbf' 
SIZE 10M 
REUSE AUTOEXTEND 
ON NEXT 2M 



--1. Создайте таблицу T_RANGE c диапазонным секционированием. Используйте ключ секционирования типа NUMBER. 
CREATE TABLE T_RANGE( ID NUMBER, TIME_ID DATE) 
PARTITION BY RANGE(ID) 
( 
PARTITION p1 VALUES LESS THAN (100) TABLESPACE T1, 
PARTITION p2 VALUES LESS THAN (200) TABLESPACE T2, 
PARTITION p3 VALUES LESS THAN (300) TABLESPACE T3, 
PARTITION pmax VALUES LESS THAN (maxvalue) TABLESPACE T4 
); 

INSERT INTO T_RANGE(ID, TIME_ID) 
VALUES(50,'01-02-2018'); 

INSERT INTO T_RANGE(ID, TIME_ID) 
VALUES(105,'01-02-2017'); 

INSERT INTO T_RANGE(ID, TIME_ID) 
VALUES(205,'01-02-2016'); 

INSERT INTO T_RANGE(ID, TIME_ID) 
VALUES(305,'01-02-2015'); 

INSERT INTO T_RANGE(ID, TIME_ID) 
VALUES(405,'01-02-2015'); 

SELECT * FROM T_RANGE; 

SELECT * FROM T_RANGE PARTITION(p1); 

SELECT * FROM T_RANGE PARTITION(p2); 

SELECT * FROM T_RANGE PARTITION(p3); 

SELECT * FROM T_RANGE PARTITION(pmax); 

--2. Создайте таблицу T_INTERVAL c интервальным секционированием. Используйте ключ секционирования типа DATE. 
CREATE TABLE T_INTERVAL(ID number, TIME_ID date) 
PARTITION BY RANGE(TIME_ID) 
INTERVAL (numtoyminterval(1,'month')) 
( 
PARTITION p0 VALUES LESS THAN (TO_DATE('1-1-2015', 'dd-mm-yyyy')) TABLESPACE T1 
); 
DROP TABLE T_INTERVAL; 

INSERT INTO T_INTERVAL(ID, TIME_ID) VALUES(40,'01-12-2014'); 
INSERT INTO T_INTERVAL(ID, TIME_ID) VALUES(5,'05-01-2015'); 
INSERT INTO T_INTERVAL(ID, TIME_ID) VALUES(305,'01-02-2015'); 
INSERT INTO T_INTERVAL(ID, TIME_ID) VALUES(46,'01-11-2014'); 

SELECT * FROM T_INTERVAL PARTITION(p0); 
SELECT * FROM T_INTERVAL PARTITION FOR('05-02-2015'); 
SELECT * FROM T_INTERVAL PARTITION FOR('12-12-2014'); 

SELECT * FROM T_INTERVAL PARTITION(SYS_P441); 
SELECT * FROM USER_TAB_PARTITIONS WHERE TABLE_NAME = 'T_LIST'; 

--3. Создайте таблицу T_HASH c хэш-секционированием. Используйте ключ секционирования типа VARCHAR2. 
CREATE TABLE T_HASH (STR VARCHAR2 (50), ID NUMBER) 
PARTITION BY HASH (STR) 
(PARTITION k1 TABLESPACE T1, 
PARTITION k2 TABLESPACE T2, 
PARTITION k3 TABLESPACE T3, 
PARTITION k4 TABLESPACE T4 
); 

INSERT INTO T_HASH (str,id) VALUES('jjj', 1); 
INSERT INTO T_HASH (str,id) VALUES('gxdghghffdh', 2); 
INSERT INTO T_HASH (str,id) VALUES('AAA', 3); 
INSERT INTO T_HASH (str,id) VALUES('oiouuuoiu', 4); 
INSERT INTO T_HASH (str,id) VALUES('a', 7); 

SELECT * FROM T_HASH; 

SELECT * FROM T_HASH PARTITION(k1); 

SELECT * FROM T_HASH PARTITION(k2); 

SELECT * FROM T_hash PARTITION(k3); 

SELECT * FROM T_HASH PARTITION(k4); 

--4. Создайте таблицу T_LIST со списочным секционированием. Используйте ключ секционирования типа CHAR. 
CREATE TABLE T_LIST(obj char(3)) 
PARTITION BY LIST (obj) 
( 
PARTITION p1 VALUES ('a'), 
PARTITION p2 VALUES ('b'), 
PARTITION p3 VALUES ('c') 
); 
INSERT INTO T_LIST(obj) VALUES('a' ); 
INSERT INTO T_LIST(obj) VALUES('b' ); 
INSERT INTO T_LIST(obj) VALUES('c' ); 
--EXCEPTION 
INSERT INTO T_LIST(obj) VALUES('d' ); 

SELECT * FROM T_LIST PARTITION (p1); 
SELECT * FROM T_LIST PARTITION (p2); 
SELECT * FROM T_LIST PARTITION (p3) ; 

--6. Продемонстрируйте для всех таблиц процесс перемещения строк между секциями, при изменении (оператор UPDATE) ключа секционирования. 

ALTER TABLE T_LIST ENABLE ROW MOVEMENT; 

UPDATE T_LIST 
SET obj='a' WHERE obj='b'; 


--7. Для одной из таблиц продемонстрируйте действие оператора ALTER TABLE MERGE.
 
ALTER TABLE T_RANGE MERGE PARTITIONS p1, p2 INTO PARTITION p5; 
--p1, p2 is deleted at all, p5 is created 
SELECT * FROM T_RANGE PARTITION(p5); 
SELECT * FROM T_RANGE PARTITION(p1); 


--8. Для одной из таблиц продемонстрируйте действие оператора ALTER TABLE SPLIT. 
ALTER TABLE T_INTERVAL SPLIT PARTITION p0 AT 
(TO_DATE('15-11-2014', 'dd-mm-yyyy')) INTO (PARTITION p1 TABLESPACE t4, PARTITION p2 TABLESPACE t2); 

SELECT * FROM T_INTERVAL PARTITION(p0); 
SELECT * FROM T_INTERVAL PARTITION(p1); 
SELECT * FROM T_INTERVAL PARTITION(p2); 


--9. Для одной из таблиц продемонстрируйте действие оператора ALTER TABLE EXCHANGE. 
CREATE TABLE T_LIST1(obj CHAR(3)); 

ALTER TABLE T_LIST EXCHANGE PARTITION p3 
WITH TABLE T_LIST1; 

SELECT * FROM T_LIST partition (p3); 
--data transfer from partitiom p3 to T_LIST1 with dropping partiotion 
SELECT * FROM T_LIST1;