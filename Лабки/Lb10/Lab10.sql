CREATE TABLE AUDITORIUM_TYPE(
  AUDITORIUM_TYPE NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY NOT NULL,
  AUDITORIUM_TYPENAME NVARCHAR2(25) NOT NULL);

CREATE TABLE AUDITORIUM(
  AUDITORIUM_NAME NVARCHAR2(50) NOT NULL,
  AUDIRORIUM_CAPACITY NUMBER NOT NULL,
  AUDITORIUM_TYPE NUMBER,
  CONSTRAINT FK_AUDITORIUM_AUDITORIUM_TYPE
  FOREIGN KEY(AUDITORIUM_TYPE)
  REFERENCES AUDITORIUM_TYPE(AUDITORIUM_TYPE));
  
CREATE TABLE FACULTY(
  FACULTY_N NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY NOT NULL,
  FACULTY_NAME NVARCHAR2(20) NOT NULL);

CREATE TABLE PULPIT(
  PULPIT NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY NOT NULL,
  PULPIT_NAME NVARCHAR2(20) NOT NULL UNIQUE,
  FACULTY NUMBER,
  CONSTRAINT FK_PULPIT_FACULTY
  FOREIGN KEY(FACULTY)
  REFERENCES FACULTY(FACULTY_N));
  
  DROP TABLE PULPIT;

CREATE TABLE TEACHER(
  TEACHER NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY NOT NULL,
  TEACHER_NAME NVARCHAR2(50) NOT NULL,
  PULPIT NUMBER NOT NULL,
  PULPIT_NAME NVARCHAR2(20),
  CONSTRAINT FK_TEACHER_PULPIT
  FOREIGN KEY(PULPIT)
  REFERENCES PULPIT(PULPIT),
  CONSTRAINT FK_TEACHER_PULPIT_NAME
  FOREIGN KEY(PULPIT_NAME)
  REFERENCES PULPIT(PULPIT_NAME));

CREATE TABLE SUBJECT(
  SUBJECT NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY NOT NULL,
  SUBJECT_NAME NVARCHAR2(25) NOT NULL,
  PULPIT NUMBER NOT NULL,
  PULPIT_NAME NVARCHAR2(20),
  CONSTRAINT FK_SUBJECT_PULPIT
  FOREIGN KEY(PULPIT)
  REFERENCES PULPIT(PULPIT),
  CONSTRAINT FK_SUBJECT_PULPIT_NAME
  FOREIGN KEY(PULPIT_NAME)
  REFERENCES PULPIT(PULPIT_NAME));
  
  
--анонимный блок
BEGIN
  NULL;
END;

BEGIN
  dbms_output.put_line('HELLO, WORLD');
END;
CREATE PROCEDURE Example_schema IS
  x number(3):=3;
  y number(3) := 0;
  z number(10, 2);
BEGIN
  DBMS_OUTPUT.PUT_LINE('This string breaks here.');
  z :=x/y;
  DBMS_OUTPUT.PUT_LINE('z = '||z);
  EXCEPTION
    WHEN OTHERS
    THEN DBMS_OUTPUT.PUT_LINE('ERROR = '||sqlerrm||sqlcode);
END;
DECLARE
  x number(3):=3;
  y number(3) := 0;
  z number(10, 2);
BEGIN
  DBMS_OUTPUT.PUT_LINE('This string breaks here.');
  BEGIN
    z :=x/y;
    DBMS_OUTPUT.PUT_LINE('z = '||z);
    EXCEPTION
      WHEN OTHERS
      THEN DBMS_OUTPUT.PUT_LINE('ERROR = '||sqlerrm||sqlcode);
  END;
  DBMS_OUTPUT.PUT_LINE('z = '||z);
END;

DECLARE
  x number(3):=3;
  y number(3) := 0;
  z number(10, 2);
BEGIN
  DBMS_OUTPUT.PUT_LINE('This string breaks here.');
  BEGIN
    z :=x/y;
    DBMS_OUTPUT.PUT_LINE('z = '||z);
    
  END;
    EXCEPTION
      WHEN OTHERS
      THEN DBMS_OUTPUT.PUT_LINE('ERROR = '||sqlerrm||sqlcode);
END;

SELECT NAME, VALUE FROM v$parameter
  WHERE NAME LIKE '%_warnings';


SELECT DBMS_WARNING.get_warning_setting_string() FROM DUAL;

SELECT keyword FROM v$reserved_words
  WHERE length = 1;

SELECT keyword FROM v$reserved_words
  WHERE length > 1
  ORDER BY keyword;

DECLARE
  xNum number(3):=3;
  xNum1 number(3):=3;
  xNum2 number(3);
  xNum3 number(3, 2);
  xNum4 number(3, 2):=432.2333;
  xNum5 number(3, -1):=3.2;
  xFloat BINARY_FLOAT := 23432.2333;
  xDouble BINARY_DOUBLE := 23432.2333;
  xNumE number(3, 12):=3.2E-10;
  xBoolean BOOLEAN := TRUE;
  cChar constant CHAR(2) := 'FF';
  cVarChar2 constant VARCHAR2(20) NOT NULL DEFAULT 'DEFAULT VALUE';
  cNumber constant number(1) := 3;
BEGIN
  DBMS_OUTPUT.PUT_LINE('xNum = '||xNum);
  xNum2 :=xNum1+xNum;
  xNum3 :=xNum2 /5;
  DBMS_OUTPUT.PUT_LINE('xNum2 :=xNum1+xNum => '||xNum2);
  DBMS_OUTPUT.PUT_LINE('xNum3 :=xNum2 /5 => '||xNum3);
  DBMS_OUTPUT.PUT_LINE('xNum2 / 7 => '||xNum2 / 7);
  DBMS_OUTPUT.PUT_LINE('xNum4 := '||xNum4);
  DBMS_OUTPUT.PUT_LINE('xNum5 := '||xNum5);
  DBMS_OUTPUT.PUT_LINE('xNum5 := '||xNum5);
  DBMS_OUTPUT.PUT_LINE('xFloat := '||xFloat);
  DBMS_OUTPUT.PUT_LINE('xDouble := '||xDouble);
  DBMS_OUTPUT.PUT_LINE('xNumE := '||xNumE);
  if xBoolean THEN
    DBMS_OUTPUT.PUT_LINE('xBoolean := true');
  END IF ;
  DBMS_OUTPUT.PUT_LINE('cChar := '||cChar);
  DBMS_OUTPUT.PUT_LINE('cVarChar2 := '||cVarChar2);
  cVarChar2:='HELLO, WORLD';
  DBMS_OUTPUT.PUT_LINE('cVarChar2 := '||cVarChar2);
  DBMS_OUTPUT.PUT_LINE('cNumber := '||cNumber);
  cNumber:=10;
END;

DECLARE
  xNum4 number(5, 2):=432.2373;
BEGIN
  DBMS_OUTPUT.PUT_LINE('xNum4 := '||xNum4);
END;
set serveroutput on ;
DECLARE
  SUBJECT U1_BAV_PDB.SUBJECT.SUBJECT_NAME%type;
  PULPIT U1_BAV_PDB.PULPIT.PULPIT%type;
  FACULTY_REC U1_BAV_PDB.FACULTY%rowtype;
BEGIN
  SUBJECT:='Physics';
  FACULTY_REC.FACULTY_NAME :='FIT';  
  DBMS_OUTPUT.PUT_LINE(SUBJECT);
  DBMS_OUTPUT.PUT_LINE(FACULTY_REC.FACULTY_NAME);
  DBMS_OUTPUT.PUT_LINE(rtrim(FACULTY_REC.FACULTY_NAME));
END;

DECLARE
  x number:=1;
BEGIN
  IF x> 8 THEN
    DBMS_OUTPUT.PUT_LINE('x > 8 => '||x);
  END IF;
  IF x < 8 THEN
    DBMS_OUTPUT.PUT_LINE('x > 8 => '||x);
  ELSE
    DBMS_OUTPUT.PUT_LINE('x < 8 => '||x);
  END IF;
  IF x = 8 THEN
    DBMS_OUTPUT.PUT_LINE('x = 8 => '||x);
  ELSIF x < 8 THEN
    DBMS_OUTPUT.PUT_LINE('x < 8 => '||x);
  ELSIF x > 8 THEN
    DBMS_OUTPUT.PUT_LINE('x > 8 => '||x);
  END IF;
END;

DECLARE
  x number:=5;
BEGIN
  CASE x
    WHEN 1 THEN DBMS_OUTPUT.PUT_LINE('1');
    WHEN 3 THEN DBMS_OUTPUT.PUT_LINE('3');
    WHEN 5 THEN DBMS_OUTPUT.PUT_LINE('5');
  END CASE;
END;

DECLARE
  x number:= 1;
BEGIN
  LOOP
    x:=x+1;
    DBMS_OUTPUT.PUT_LINE(x);
  EXIT WHEN x> 3;
  END LOOP;
END;

DECLARE
  k number;
BEGIN
  FOR k in 1..5
  LOOP
    DBMS_OUTPUT.PUT_LINE(k);
  END LOOP;
END;

DECLARE
  x number:=0;
BEGIN
  WHILE(x>4)
  LOOP
    x := x+1;
    DBMS_OUTPUT.put_line(x);
  END LOOP;
END;
