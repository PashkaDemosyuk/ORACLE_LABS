--system_bav_pdb
--grant create sequence to U1_BAV_PDB;

CREATE SEQUENCE S1
INCREMENT BY 10
START WITH 1000
NOMINVALUE
NOMAXVALUE
NOCYCLE
CACHE 20
ORDER;


--for the first step
SELECT S1.NEXTVAL FROM DUAL;
--for next steps
SELECT S1.CURRVAL FROM DUAL;

--FEW VALUES
SELECT S1.NEXTVAL, S1.NEXTVAL FROM DUAL;

CREATE SEQUENCE S2
INCREMENT BY 10
START WITH 10
MAXVALUE 100
NOCYCLE;

CREATE SEQUENCE S3
INCREMENT BY -10
START WITH 10
MAXVALUE 10
MINVALUE -100
NOCYCLE
ORDER;

CREATE SEQUENCE S4
INCREMENT BY 1
START WITH 10
MAXVALUE 16
MINVALUE 10
CYCLE
CACHE 5;

DECLARE
  ind NUMBER := 0;
  val NUMBER;
BEGIN
  WHILE(ind<10) LOOP
    ind:= ind+1;
    SELECT S4.NEXTVAL INTO val FROM DUAL;
    dbms_output.put_line(val);
  END LOOP;
END;

--GRANT SELECT ANY DICTIONARY TO U1_BAV_PDB(FROM SYSTEM_BAV_PDB)
SELECT SEQUENCE_NAME,
  MIN_VALUE,
  MAX_VALUE,
  INCREMENT_BY,
  CYCLE_FLAG,
  ORDER_FLAG,
  CACHE_SIZE,
  LAST_NUMBER
FROM sys.DBA_SEQUENCES
WHERE SEQUENCE_OWNER LIKE 'U1_BAV%';

CREATE TABLE T1(
  N1 NUMBER(20),
  N2 NUMBER(20),
  N3 NUMBER(20),
  N4 NUMBER(20)) STORAGE(BUFFER_POOL KEEP);
  
DECLARE 
    ind NUMBER := 0;
    n1 NUMBER; n2 NUMBER; n3 NUMBER; n4 NUMBER;
BEGIN
  WHILE(ind < 7) LOOP
    SELECT S1.NEXTVAL into n1 FROM DUAL;
    SELECT S2.NEXTVAL into n2 FROM DUAL;
    SELECT S3.NEXTVAL into n3 FROM DUAL;
    SELECT S4.NEXTVAL into n4 FROM DUAL;
    INSERT INTO T1 values(n1, n2,n3, n4);
    ind := ind +1;
  END LOOP;
END;

SELECT * FROM T1;
  
--GRANT CREATE CLUSTER TO U1_BAV_PDB
CREATE CLUSTER ABC(
  X NUMBER(10),
  V VARCHAR(12))
  HASHKEYS 200;
  
CREATE TABLE A(
  XA NUMBER(10),
  VA VARCHAR2(12),
  XAA NUMBER(2))
  CLUSTER ABC(XA, VA);
  
CREATE TABLE B(
  XB NUMBER(10),
  VB VARCHAR2(12),
  XBB NUMBER(2))
  CLUSTER ABC(XB, VB);
  
CREATE TABLE C(
  XC NUMBER(10),
  VC VARCHAR2(12),
  XCC NUMBER(2))
  CLUSTER ABC(XC, VC);


COMMIT;

SELECT * FROM DBA_CLUSTERS
WHERE OWNER LIKE 'U1_BAV%';


--GRANT CREATE SYNONYM TO U1_BAV_PDB;
SELECT * FROM DBA_SYNONYMS
WHERE OWNER LIKE 'U1_BAV%';

CREATE SYNONYM T3 FOR C;

SELECT * FROM T3;
--GRANT CREATE PUBLIC SYNONYM;
CREATE PUBLIC SYNONYM T2 FOR B;

CREATE TABLE AA(
  idA NUMBER PRIMARY KEY);

CREATE TABLE BB(
  idB NUMBER PRIMARY KEY,
  FK NUMBER,
  CONSTRAINT FK_AA
  FOREIGN KEY(FK) REFERENCES AA(idA)); 
  
DECLARE
  ind NUMBER := 0;
BEGIN
  WHILE(ind<6) LOOP
    ind:= ind+1;
    INSERT INTO AA values(ind);
    INSERT INTO BB values(ind, ind);
  END LOOP;
END;

CREATE VIEW V1
AS
  SELECT idA, idB
  FROM AA
  INNER JOIN BB
  ON idA = FK;
  
SELECT * FROM V1;

--GRANT CREATE MATERIALIZED VIEW TO U1_BAV_PDB;

CREATE MATERIALIZED VIEW MV1
BUILD IMMEDIATE
REFRESH NEXT SYSDATE + 2/1440
AS
  SELECT A.CA, B.CB
  FROM(SELECT COUNT(*) CA FROM AA) A,
  (SELECT COUNT(*) CB FROM BB) B;

